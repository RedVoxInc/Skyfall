name: "Push Docs to gh-pages"

on: [push]
#  - push
#    paths:
#      - 'docs/**'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      # Standard drop-in approach that should work for most people.
#      - uses: ammaraskar/sphinx-action@master
#        with:
#          docs-folder: "docs/"
      - uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"
          build-command: "sphinx-build -b html docs/source/ docs/build/html"
      # Create an artifact of the html output.
      - uses: actions/upload-artifact@v1
        with:
          name: DocumentationHTML
          path: docs/_build/html/
      # Publish built docs to gh-pages branch.
      # ===============================
      - name: Commit documentation changes
        run: |
          git clone https://github.com/ammaraskar/sphinx-action-test.git --branch gh-pages --single-branch gh-pages
          cp -r docs/_build/html/* gh-pages/
          cd gh-pages
          touch .nojekyll
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update documentation" -a || true
          # The above command will fail if no changes were present, so we ignore
          # that.
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          directory: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
    # ===============================
#
#name: github pages
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  deploy:
#    runs-on: ubuntu-18.04
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Setup Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.8'
#
#      - name: Upgrade pip
#        run: |
#          # install pip=>20.1 to use "pip cache dir"
#          python3 -m pip install --upgrade pip
#
#      - name: Get pip cache dir
#        id: pip-cache
#        run: echo "::set-output name=dir::$(pip cache dir)"
#
#      - name: Cache dependencies
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.pip-cache.outputs.dir }}
#          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-pip-
#
#      - name: Install dependencies
#        run: python3 -m pip install -r ./requirements.txt
#
#      - run: mkdocs build
#
#      - name: Deploy
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./site